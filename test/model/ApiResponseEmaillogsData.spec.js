/*
 * Mimepost
 * MimePost API for sending email. You can find out more about MimePost at [https://mimepost.com](http://mimepost.com). For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@mimepost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Mimepost);
  }
}(this, function(expect, Mimepost) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ApiResponseEmaillogsData', function() {
      beforeEach(function() {
        instance = new Mimepost.ApiResponseEmaillogsData();
      });

      it('should create an instance of ApiResponseEmaillogsData', function() {
        // TODO: update the code to test ApiResponseEmaillogsData
        expect(instance).to.be.a(Mimepost.ApiResponseEmaillogsData);
      });

      it('should have the property datetime (base name: "datetime")', function() {
        // TODO: update the code to test the property datetime
        expect(instance).to.have.property('datetime');
        // expect(instance.datetime).to.be(expectedValueLiteral);
      });

      it('should have the property message_id (base name: "message_id")', function() {
        // TODO: update the code to test the property message_id
        expect(instance).to.have.property('message_id');
        // expect(instance.message_id).to.be(expectedValueLiteral);
      });

      it('should have the property to_email (base name: "to_email")', function() {
        // TODO: update the code to test the property to_email
        expect(instance).to.have.property('to_email');
        // expect(instance.to_email).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property details (base name: "details")', function() {
        // TODO: update the code to test the property details
        expect(instance).to.have.property('details');
        // expect(instance.details).to.be(expectedValueLiteral);
      });

    });
  });

}));
