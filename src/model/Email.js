/*
 * Mimepost
 * MimePost API for sending email. You can find out more about MimePost at [https://mimepost.com](http://mimepost.com). For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@mimepost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EmailAttachments', 'model/EmailGlobalMergeVars', 'model/EmailTo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EmailAttachments'), require('./EmailGlobalMergeVars'), require('./EmailTo'));
  } else {
    // Browser globals (root is window)
    if (!root.Mimepost) {
      root.Mimepost = {};
    }
    root.Mimepost.Email = factory(root.Mimepost.ApiClient, root.Mimepost.EmailAttachments, root.Mimepost.EmailGlobalMergeVars, root.Mimepost.EmailTo);
  }
}(this, function(ApiClient, EmailAttachments, EmailGlobalMergeVars, EmailTo) {
  'use strict';

  /**
   * The Email model module.
   * @module model/Email
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>Email</code>.
   * @alias module:model/Email
   * @class
   * @param html {String} 
   * @param subject {String} 
   * @param from_email {String} 
   * @param to {Array.<module:model/EmailTo>} 
   */
  var exports = function(html, subject, from_email, to) {
    this.html = html;
    this.subject = subject;
    this.from_email = from_email;
    this.to = to;
  };

  /**
   * Constructs a <code>Email</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Email} obj Optional instance to populate.
   * @return {module:model/Email} The populated <code>Email</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('html'))
        obj.html = ApiClient.convertToType(data['html'], 'String');
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('from_email'))
        obj.from_email = ApiClient.convertToType(data['from_email'], 'String');
      if (data.hasOwnProperty('from_name'))
        obj.from_name = ApiClient.convertToType(data['from_name'], 'String');
      if (data.hasOwnProperty('global_merge_vars'))
        obj.global_merge_vars = ApiClient.convertToType(data['global_merge_vars'], [EmailGlobalMergeVars]);
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], [EmailTo]);
      if (data.hasOwnProperty('cc'))
        obj.cc = ApiClient.convertToType(data['cc'], ['String']);
      if (data.hasOwnProperty('bcc'))
        obj.bcc = ApiClient.convertToType(data['bcc'], ['String']);
      if (data.hasOwnProperty('attachments'))
        obj.attachments = ApiClient.convertToType(data['attachments'], [EmailAttachments]);
      if (data.hasOwnProperty('vars'))
        obj.vars = ApiClient.convertToType(data['vars'], {'String': 'String'});
    }
    return obj;
  }

  /**
   * @member {String} html
   */
  exports.prototype.html = undefined;

  /**
   * @member {String} subject
   */
  exports.prototype.subject = undefined;

  /**
   * @member {String} from_email
   */
  exports.prototype.from_email = undefined;

  /**
   * @member {String} from_name
   */
  exports.prototype.from_name = undefined;

  /**
   * @member {Array.<module:model/EmailGlobalMergeVars>} global_merge_vars
   */
  exports.prototype.global_merge_vars = undefined;

  /**
   * @member {Array.<module:model/EmailTo>} to
   */
  exports.prototype.to = undefined;

  /**
   * @member {Array.<String>} cc
   */
  exports.prototype.cc = undefined;

  /**
   * @member {Array.<String>} bcc
   */
  exports.prototype.bcc = undefined;

  /**
   * @member {Array.<module:model/EmailAttachments>} attachments
   */
  exports.prototype.attachments = undefined;

  /**
   * @member {Object.<String, String>} vars
   */
  exports.prototype.vars = undefined;


  return exports;

}));
